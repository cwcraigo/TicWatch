package com.example.ticwatch3;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.Socket;
import java.net.URL;
import java.util.HashMap;

import org.quickconnectfamily.json.JSONInputStream;
import org.quickconnectfamily.json.JSONOutputStream;

import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.widget.TextView;

public class MainActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		// get favorites form db
		// get info for favorites from http service
		// String uuid = "1234";
		// Thread serverThread = new Thread(new Client(uuid));
		// serverThread.start();

		// get info for favorites from http service
		Thread trd = new Thread(new Runnable() {
			Socket toServer;
			OutputStream outStream;
			InputStream inStream;
			JSONOutputStream outToServer;
			JSONInputStream inFromServer;
			
			String uuid = "1234";
			HashMap symbols;
			
			URL url;
			
			TextView name = (TextView) findViewById(R.id.name1);
			TextView symbol = (TextView) findViewById(R.id.symbol1);
			TextView price = (TextView) findViewById(R.id.price1);
			TextView change = (TextView) findViewById(R.id.change1);
			TextView changePercent = (TextView) findViewById(R.id.changePercent1);
			TextView allAtOnce = (TextView) findViewById(R.id.TextView01);

			@Override
			public void run() {

				try {
					toServer = new Socket("127.0.0.1", 9292);
					
					outStream =  toServer.getOutputStream();
					outToServer = new JSONOutputStream(outStream);

					outToServer.writeObject(uuid);
					
					inStream =  toServer.getInputStream();
					inFromServer = new JSONInputStream(inStream);
					
					boolean check = true;
					while (check) {

						symbols = (HashMap) inFromServer.readObject();
						String done = (String) symbols.get("cmd");

						if (done.equals("done")) {
							toServer.close();
							check = false;
						}
					}
					
					url = new URL("http://cwcraigo.com/stockfeed.php?symbols=AAPL+ORCL+GOOG");
					HttpURLConnection con = (HttpURLConnection) url
							.openConnection();
					JSONInputStream input = new JSONInputStream(con
							.getInputStream());
					HashMap map = (HashMap) input.readObject();

					HashMap bean = (HashMap) map.get("AAPL");
					name.setText((CharSequence) bean.get("name"));
					symbol.setText((CharSequence) bean.get("symbol"));
					price.setText((CharSequence) bean.get("price"));
					change.setText((CharSequence) bean.get("change"));
					changePercent.setText((CharSequence) bean
							.get("changePercent"));

					String s = "Name: " + bean.get("name") + "\nSymbol: "
							+ bean.get("symbol");

					allAtOnce.setText(s);

				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		trd.start();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}
